---
title: "Quarto Dashboard of Wikipedia Edit History."
date: "2024-07-20"
categories: ["Data Science/Programming"]
format: dashboard

---

```{r, setup}
#| include: FALSE
#| echo: false

knitr::opts_chunk$set(collapse = TRUE)

library(httr2)
library(gt)
library(tidyverse)
```


```{r, pullapi}

getWord <- function(){
  requestJSON <- 
    request("https://random-word-api.herokuapp.com/word") |> 
    req_perform() |>
    resp_body_json()
  requestJSON[[1]] 
}

searchArt <- function(cWord){
  reqString <- str_glue("https://api.artic.edu/api/v1/artworks/search?q={cWord}")
  requestJSON <-
  request(reqString) |> 
    req_perform() |>
    resp_body_json()
  
    requestJSON |> 
    pluck('data') |> 
    map_dfr(\(x) { #purrr
        tibble(
          id = x |> pluck('id'),
          api_link = x |> pluck('api_link'),
          title =  x |> pluck('title')
        )
      }
    ) |>
    mutate(promptWord = cWord)
}





nHits <- 0
while(nHits == 0){
  print("Searching for artwork")
  gg <- searchArt(getWord())
  
  nHits <- nrow(gg)
  print(nHits)
}


for(i in 1:){
  temp_pul <- 
request(gh$api_link[[i]]) |> 
  req_method("POST") |> 
  req_perform() |>
  resp_body_json()
  
  gh$ii[[i]] <- temp_pul  |> 
  pluck('config') |> pluck('iiif_url') 
  
    gh$ff[[i]] <- temp_pul  |> 
  pluck('data') |> pluck('image_id') 
  Sys.sleep(5)
}



gh <- 
  gh |>
  mutate(
    url = paste0(ii,"/",ff,"/full/843,/0/default.jpg"),
    siteURL = paste0("https://www.artic.edu/artworks/",id)
    )


gh |>
  gt(id = "custom") |>
  text_transform(
    locations = cells_body(columns = url),
    fn = function(x) { web_image(url = x, height = 150) }
  )|>
  fmt_url(
    columns = siteURL,
    label = fontawesome::fa(
      name = "link",
      height = "0.75em",
      vertical_align = "0em"
     ),
    color = "gray65"
  )|>
  cols_merge(
    columns = c(title, siteURL),
    pattern = "{1} {2}"
  )


```
library(jsonlite)

raw_538_json <- fromJSON("https://wikimedia.org/api/rest_v1/metrics/pageviews/aggregate/en.wikipedia.org/all-access/all-agents/daily/20240516/20240517", simplifyVector = TRUE)

df <- as.data.frame(raw_538_json)
```

```{r, httr}

library(httr2)
library(dplyr)
library(purrr)

url <- "https://wikimedia.org/api/rest_v1/metrics/pageviews/aggregate/en.wikipedia.org/all-access/all-agents/daily/20240516/20240517"

xx <- request(url) |> req_perform() |> resp_body_json()

as.data.frame(xx$items)

xx |> 
  pluck('items') |> 
  map_dfr(\(x) { #purrr
      tibble(
        project = x |> pluck('project'),
        access =  x |> pluck('access'),
        agent =   x |> pluck('agent'),
        views =   x |> pluck('views')
      )
    }
  )
```



```{r, httr}
library(purrr)
library(httr2)

url <- "https://wikimedia.org/api/rest_v1/metrics/pageviews/aggregate/"



req <- request(url)

req |> req_body_json(list(project  = 'en.wikipedia.org', access  = 'all-access', agent = 'agents', granularity = 'daily',start = '20240516',end = '20240517')) |> req_perform() |> resp_body_json()
  


```
```{r}
library(httr2)






```




```{r}
library(gt)
library(tidyverse)

xx <- data.frame(x = "sdfsdf", y = "https://www.artic.edu/iiif/2/658cf73e-9020-075d-235f-a8eb5a5ead56/full/843,/0/default.jpg")




```

